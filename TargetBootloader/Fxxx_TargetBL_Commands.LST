C51 COMPILER V9.02   FXXX_TARGETBL_COMMANDS                                                03/15/2013 16:18:47 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE FXXX_TARGETBL_COMMANDS
OBJECT MODULE PLACED IN Fxxx_TargetBL_Commands.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe Fxxx_TargetBL_Commands.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc) ROM(SMALL) OT(1
                    -1,SIZE)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // Fxxx_TargetBL_Commands.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) 2010 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // 
  10          //
  11          // How To Test:
  12          //
  13          // 
  14          //
  15          //
  16          // Target:         C8051Fxxx (Any Silicon Labs Flash MCU)
  17          // Tool chain:     Generic
  18          // Command Line:   None
  19          //
  20          //
  21          // Release 1.0 / 01SEP2010 (PKC)
  22          //    -Initial Revision
  23          //
  24          //-----------------------------------------------------------------------------
  25          
  26          //-----------------------------------------------------------------------------
  27          // Includes
  28          //-----------------------------------------------------------------------------
  29          #include <compiler_defs.h>
  30          #include "Fxxx_SFR_Defs_Wrapper.h"     // This header file will include the
  31                                                 // real MCU register definition file
  32          
  33          #include "Fxxx_Target_Config.h"
  34          #include "Fxxx_Target_Interface.h"
  35          
  36          #include "Fxxx_TargetBL_Config.h"
  37          #include "Fxxx_TargetBL_Interface.h"
  38          
  39          #include "Fxxx_BL131_SMB0_Interface.h"
  40          
  41          //-----------------------------------------------------------------------------
  42          // Global CONSTANTS
  43          //-----------------------------------------------------------------------------
  44          
  45          
  46          
  47          //-----------------------------------------------------------------------------
  48          // Global Variables
  49          //-----------------------------------------------------------------------------
  50          U8 Rx_Buf[TGT_BL_BUF_SIZE];
  51          U8 Tx_Buf[TGT_BL_BUF_SIZE];
  52          
  53          U8 Flash_Key0;
  54          U8 Flash_Key1;
C51 COMPILER V9.02   FXXX_TARGETBL_COMMANDS                                                03/15/2013 16:18:47 PAGE 2   

  55          
  56          //-----------------------------------------------------------------------------
  57          // Function Prototypes (Local)
  58          //-----------------------------------------------------------------------------
  59          
  60          
  61          //=============================================================================
  62          // Function Definitions
  63          //=============================================================================
  64          
  65          //-----------------------------------------------------------------------------
  66          // TGT_Pre_Flash
  67          //-----------------------------------------------------------------------------
  68          //
  69          // Return Value:  None
  70          // Parameters:    None
  71          //
  72          // Gets the FLKEY code out of Rx_Buf and clears Rx_Buf to help prevent flash
  73          // corruption.
  74          //-----------------------------------------------------------------------------
  75          void TGT_Pre_Flash (void)
  76          {
  77   1         // Store relevant information
  78   1         Flash_Key0 = Rx_Buf[1];
  79   1         Flash_Key1 = Rx_Buf[2];
  80   1         Rx_Buf[1] = 0;
  81   1         Rx_Buf[2] = 0;
  82   1         Set_TX_TGT_RSP_OK ();
  83   1      
  84   1         // Send response
  85   1         SMB0_Op (1);
  86   1      }
  87          
  88          //-----------------------------------------------------------------------------
  89          // TGT_Erase_Page
  90          //-----------------------------------------------------------------------------
  91          //
  92          // Return Value:  None
  93          // Parameters:    None
  94          //
  95          // Erases one page of flash.
  96          //-----------------------------------------------------------------------------
  97          void TGT_Erase_Page (void)
  98          {
  99   1         // Command Format:
 100   1         // [0] Command
 101   1         // [1] flash key code0
 102   1         // [2] flash key code1
 103   1         // [3] addr0 (LSB)
 104   1         // [4] addr1 (MSB)
 105   1         // [5] N/A
 106   1      
 107   1         // Response:
 108   1         // [0] Response code
 109   1      
 110   1         U8 AddrMSB = Rx_Buf[4];
 111   1      
 112   1         if ((AddrMSB < (APP_FW_START_ADDR >> 8)) || (AddrMSB > ((APP_FW_END_ADDR >> 8) - 2)))
 113   1         {
 114   2            // Address out-of-bounds
 115   2            Set_TX_TGT_RSP_PARAMETER_INVALID ();
 116   2         }
C51 COMPILER V9.02   FXXX_TARGETBL_COMMANDS                                                03/15/2013 16:18:47 PAGE 3   

 117   1         else
 118   1         {
 119   2            // Setup for flash operation
 120   2            TGT_Pre_Flash ();
 121   2      
 122   2            PSCTL |= 0x03;
 123   2            FLASH_Modify ((AddrMSB << 8), 0x00);
 124   2         }
 125   1      }
 126          
 127          //-----------------------------------------------------------------------------
 128          // TGT_Write_Flash
 129          //-----------------------------------------------------------------------------
 130          //
 131          // Return Value:  None
 132          // Parameters:    None
 133          //
 134          // Writes 1 - 32 bytes of flash.
 135          //-----------------------------------------------------------------------------
 136          void TGT_Write_Flash (void)
 137          {
 138   1         // Command Format:
 139   1         // [0] Command
 140   1         // [1] flash key code0
 141   1         // [2] flash key code1
 142   1         // [3] addr0 (LSB)
 143   1         // [4] addr1 (MSB)
 144   1         // [5] numbytes
 145   1         
 146   1         // Response:
 147   1         // [0] Response code
 148   1      
 149   1         // Bytes to write:
 150   1         // [0] byte0
 151   1         // [1] byte1
 152   1         // [.] ...
 153   1         // [numbytes-1] byte(numbytes-1)
 154   1      
 155   1         UU16 start_addr;
 156   1         U8 numbytes;
 157   1         U8 data * Rx_Buf_ptr = Rx_Buf;
 158   1      
 159   1         start_addr.U8[LSB] = Rx_Buf[3];
 160   1         start_addr.U8[MSB] = Rx_Buf[4];
 161   1         numbytes = Rx_Buf[5];
 162   1      
 163   1         if ((start_addr.U8[MSB] < (APP_FW_START_ADDR >> 8)) ||
 164   1            (start_addr.U8[MSB] > (APP_FW_END_ADDR >> 8)) ||
 165   1            ((U8)((start_addr.U16 + numbytes - 1) >> 8) > (APP_FW_END_ADDR >> 8)))
 166   1         {
 167   2            // Address out-of-bounds
 168   2            Set_TX_TGT_RSP_PARAMETER_INVALID ();
 169   2         }
 170   1         else
 171   1         {
 172   2            // Setup for flash operation
 173   2            TGT_Pre_Flash ();
 174   2      
 175   2            // Get the bytes to be written to flash
 176   2            SMB0_Op (numbytes);
 177   2      
 178   2            while (numbytes--)
C51 COMPILER V9.02   FXXX_TARGETBL_COMMANDS                                                03/15/2013 16:18:47 PAGE 4   

 179   2            {
 180   3               PSCTL |= 0x01;
 181   3               FLASH_Modify (start_addr.U16, *(Rx_Buf_ptr));
 182   3               Rx_Buf_ptr++;
 183   3               start_addr.U16++;
 184   3            }      
 185   2         } 
 186   1      }
 187          
 188          //-----------------------------------------------------------------------------
 189          // TGT_Read_Flash
 190          //-----------------------------------------------------------------------------
 191          //
 192          // Return Value:  None
 193          // Parameters:    None
 194          //
 195          // Reads 1 - 32 bytes of flash.
 196          //-----------------------------------------------------------------------------
 197          void TGT_Read_Flash (void)
 198          {
 199   1         // Command Format:
 200   1         // [0] Command
 201   1         // [1] N/A
 202   1         // [2] N/A
 203   1         // [3] addr0 (LSB)
 204   1         // [4] addr1 (MSB)
 205   1         // [5] numbytes
 206   1         
 207   1         // Response:
 208   1         // [0] Response code
 209   1         // [1] Flash byte 0
 210   1         // [2] Flash byte 1
 211   1         // ...
 212   1         // [numbytes] Flash byte numbytes - 1
 213   1      
 214   1         U8 code * start_addr;
 215   1         U8 data * Tx_Buf_ptr = &Tx_Buf[0];
 216   1         U8 numbytes = Rx_Buf[5];
 217   1      
 218   1         // Setup for flash operation
 219   1         TGT_Pre_Flash ();
 220   1      
 221   1         start_addr = ((Rx_Buf[4] << 8) | Rx_Buf[3]);
 222   1      
 223   1         do
 224   1         {
 225   2            *(Tx_Buf_ptr) = *start_addr;
 226   2            start_addr++;
 227   2            Tx_Buf_ptr++;
 228   2         } while (--numbytes);
 229   1      
 230   1      
 231   1         // Send the response code and flash bytes
 232   1         SMB0_Op (Rx_Buf[5]);
 233   1      }
 234          
 235          //-----------------------------------------------------------------------------
 236          // End Of File
 237          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.02   FXXX_TARGETBL_COMMANDS                                                03/15/2013 16:18:47 PAGE 5   

   CODE SIZE        =    173    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     66       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

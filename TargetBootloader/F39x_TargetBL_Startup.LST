A51 MACRO ASSEMBLER  F39X_TARGETBL_STARTUP                                                03/15/2013 15:22:26 PAGE     1


MACRO ASSEMBLER A51 V8.02
OBJECT MODULE PLACED IN F39x_TargetBL_Startup.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\a51.exe F39x_TargetBL_Startup.A51 XR GEN DB EP NOMOD51 INCDIR(C:\SiLabs\MCU\Inc) 

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.
                       5     ;  Version 8.01
                       6     ;
                       7     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       8     ;------------------------------------------------------------------------------
                       9     ;  STARTUP.A51:  This code is executed after processor reset.
                      10     ;
                      11     ;  To translate this file use A51 with the following invocation:
                      12     ;
                      13     ;     A51 STARTUP.A51
                      14     ;
                      15     ;  To link the modified STARTUP.OBJ file to your application use the following
                      16     ;  Lx51 invocation:
                      17     ;
                      18     ;     Lx51 your object file list, STARTUP.OBJ  controls
                      19     ;
                      20     ;------------------------------------------------------------------------------
                      21     ;******************************************************************************
                      22     ; Copyright (c) 2009, Silicon Laboratories, Inc.
                      23     ;
                      24     ; Filename  : Fnnn_TargetBL_Startup.A51
                      25     ; Devices   : C8051Fnnn
                      26     ; Toolchain : Keil
                      27     ;
                      28     ; Description:
                      29     ;
                      30     ; [*** TEMPLATE INFORMATION ***]
                      31     ; Filename: Fnnn_TargetBL_Startup.A51
                      32     ; nnn => Fill-in with the MCU family part number.
                      33     ; Examples: F50x_TargetBL_Startup.A51, F34x_TargetBL_Startup.A51
                      34     ;
                      35     ; Contains the power-on initialization and interrupt vector redirect code
                      36     ; for the modular target bootloader project.
                      37     ;
                      38     ; Note: This file is a modified version of the original STARTUP.A51 file
                      39     ; supplied with the Keil tool chain (Version 8).
                      40     ;
                      41     ; Revision History:
                      42     ;
                      43     ; Release 1.0 / 18NOV2009 (PKC)
                      44     ;    -Initial Revision
                      45     ;
                      46     ;******************************************************************************
                      47     ;
                      48     ;  User-defined <h> Power-On Initialization of Memory
                      49     ;
                      50     ;  With the following EQU statements the initialization of memory
                      51     ;  at processor reset can be defined:
                      52     ;
                      53     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      54     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      55     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0000                56     IDATALEN        EQU     00H
                      57     ;
                      58     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF>
A51 MACRO ASSEMBLER  F39X_TARGETBL_STARTUP                                                03/15/2013 15:22:26 PAGE     2

                      59     ;     <i> The absolute start address of XDATA memory
  0000                60     XDATASTART      EQU     0
                      61     ;
                      62     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF>
                      63     ;     <i> The length of XDATA memory in bytes.
  0000                64     XDATALEN        EQU     0
                      65     ;
                      66     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF>
                      67     ;     <i> The absolute start address of PDATA memory
  0000                68     PDATASTART      EQU     0H
                      69     ;
                      70     ; <o> PDATALEN: PDATA memory size <0x0-0xFF>
                      71     ;     <i> The length of PDATA memory in bytes.
  0000                72     PDATALEN        EQU     0H
                      73     ;
                      74     ;</h>
                      75     ;------------------------------------------------------------------------------
                      76     ;
                      77     ;<h> Reentrant Stack Initialization
                      78     ;
                      79     ;  The following EQU statements define the stack pointer for reentrant
                      80     ;  functions and initialized it:
                      81     ;
                      82     ; <h> Stack Space for reentrant functions in the SMALL model.
                      83     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
                      84     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                85     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      86     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      87     ;     <i> Set the top of the stack to the highest location.
  0100                88     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1
                      89     ; </h>
                      90     ;
                      91     ; <h> Stack Space for reentrant functions in the LARGE model.
                      92     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                      93     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000                94     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                      95     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                      96     ;     <i> Set the top of the stack to the highest location.
  0000                97     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1
                      98     ; </h>
                      99     ;
                     100     ; <h> Stack Space for reentrant functions in the COMPACT model.
                     101     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                     102     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000               103     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                     104     ;
                     105     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                     106     ;     <i> Set the top of the stack to the highest location.
  0100               107     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1
                     108     ; </h>
                     109     ;</h>
                     110     ;------------------------------------------------------------------------------
                     111     ;
                     112     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                     113     ;  <e>Compact Model Page Definition
                     114     ;
                     115     ;  <i>Define the XDATA page used for PDATA variables.
                     116     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                     117     ;
                     118     ; Enable pdata memory page initalization
  0000               119     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                     120     ;
                     121     ; <o> PPAGE number <0x0-0xFF>
                     122     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  0000               123     PPAGE           EQU     0
                     124     ;
A51 MACRO ASSEMBLER  F39X_TARGETBL_STARTUP                                                03/15/2013 15:22:26 PAGE     3

                     125     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF>
                     126     ; <i> most 8051 variants use P2 as uppermost address byte
  00A0               127     PPAGE_SFR       DATA    0A0H
                     128     ;
                     129     ; </e>
                     130     ;------------------------------------------------------------------------------
                     131     
                     132     ; Standard SFR Symbols
  00E0               133     ACC     DATA    0E0H
  00F0               134     B       DATA    0F0H
  0081               135     SP      DATA    81H
  0082               136     DPL     DATA    82H
  0083               137     DPH     DATA    83H
                     138     
                     139     ;******************************************************************************
                     140     ; Begin custom code for CAN_BL - Target_BL_FW ->
                     141     ;******************************************************************************
                     142     
                     143     ;------------------------------------------------------------------------------
                     144     ; Redirects the HW interrupt vectors to a jump table starting at INTVEC_TABLE.
                     145     ; This table will always be part of the App_FW space and can be modified by the
                     146     ; bootloader's ERASE and WRITE commands.
                     147     
                     148     ;HW Interrupt Entries
  0003               149     HW_INTVEC_TABLE       EQU 0003h     ;HW Interrupt vector table starts here
  0008               150     HW_INTVEC_SEPARATION  EQU 8         ;HW Interrupt vector separation is 8 Bytes
                     151     
                     152     ;Redirected Interrupt Entries
                     153     ;Changes to INTVEC_TABLE location should be mirrored in:
                     154     ;   BL FW's USB_BL_Defs.h (APP_START_PAGE)
                     155     ;   App FW's STARTUP.A51, Compiler and Linker command lines
                     156     PUBLIC START_APPLICATION            ;The entry point (relocated reset vector)
  0200               157     START_APPLICATION     EQU  0200h    ;for the application FW project
                     158     
  0203               159     INTVEC_TABLE          EQU  START_APPLICATION+3  ;Interrupt vector table starts here
  0003               160     INTVEC_SEPARATION     EQU  3        ;Interrupt vector separation is 3 Bytes
                     161     
----                 162           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 0)  ;03h (Intr. 00)
0003 4103            163           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 0)
                     164     
----                 165           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 1)  ;0Bh (Intr. 01)
000B 4106            166           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 1)
                     167     
----                 168           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 2)  ;13h (Intr. 02)
0013 4109            169           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 2)
                     170     
----                 171           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 3)  ;1Bh (Intr. 03)
001B 410C            172           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 3)
                     173     
----                 174           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 4)  ;23h (Intr. 04)
0023 410F            175           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 4)
                     176     
----                 177           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 5)  ;2Bh (Intr. 05)
002B 4112            178           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 5)
                     179     
----                 180           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 6)  ;33h (Intr. 06)
0033 4115            181           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 6)
                     182     
----                 183           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 7)  ;3Bh (Intr. 07)
003B 4118            184           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 7)
                     185     
                     186     ;      CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 8)  ;43h (Intr. 08)
                     187     ;      AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 8)
                     188     
----                 189           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 9)  ;4Bh (Intr. 09)
004B 411E            190           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 9)
A51 MACRO ASSEMBLER  F39X_TARGETBL_STARTUP                                                03/15/2013 15:22:26 PAGE     4

                     191     
----                 192           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 10) ;53h (Intr. 10)
0053 4121            193           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 10)
                     194     
----                 195           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 11) ;5Bh (Intr. 11)
005B 4124            196           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 11)
                     197     
----                 198           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 12) ;63h (Intr. 12)
0063 4127            199           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 12)
                     200     
                     201     ;      CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 13) ;6Bh (Intr. 13)
                     202     ;      AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 13)
                     203     
----                 204           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 14) ;73h (Intr. 14)
0073 412D            205           AJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 14)
                     206     
                     207     
                     208     ;******************************************************************************
                     209     ;End of custom code <-
                     210     ;Unmodified Keil STARTUP.A51 code continues below ->
                     211     ;******************************************************************************
                     212     
                     213                     NAME    ?C_STARTUP
                     214     
                     215     
                     216     ?C_C51STARTUP   SEGMENT   CODE
                     217     ?STACK          SEGMENT   IDATA
                     218     
----                 219                     RSEG    ?STACK
0000                 220                     DS      1
                     221     
                     222                     EXTRN CODE (?C_START)
                     223                     PUBLIC  ?C_STARTUP
                     224     
----                 225                     CSEG    AT      0
0000 0100     F      226     ?C_STARTUP:     AJMP    STARTUP1
                     227     
----                 228                     RSEG    ?C_C51STARTUP
                     229     
0000                 230     STARTUP1:
                     231     
                     232     IF IDATALEN <> 0
                                             MOV     R0,#IDATALEN - 1
                                             CLR     A
                             IDATALOOP:      MOV     @R0,A
                                             DJNZ    R0,IDATALOOP
                             ENDIF
                     238     
                     239     IF XDATALEN <> 0
                                             MOV     DPTR,#XDATASTART
                                             MOV     R7,#LOW (XDATALEN)
                               IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                               ELSE
                                             MOV     R6,#HIGH (XDATALEN)
                               ENDIF
                                             CLR     A
                             XDATALOOP:      MOVX    @DPTR,A
                                             INC     DPTR
                                             DJNZ    R7,XDATALOOP
                                             DJNZ    R6,XDATALOOP
                             ENDIF
                     253     
                     254     IF PPAGEENABLE <> 0
                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
A51 MACRO ASSEMBLER  F39X_TARGETBL_STARTUP                                                03/15/2013 15:22:26 PAGE     5

                     257     
                     258     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     266     
                     267     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     272     
                     273     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     279     
                     280     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     284     
0000 758100   F      285                     MOV     SP,#?STACK-1
                     286     
                     287     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     288     ;<h> Code Banking
                     289     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     290     
                             
                             
                                             
                             
                     295     ;</h>
0003 0100     F      296                     AJMP    ?C_START
                     297     
                     298                     END
A51 MACRO ASSEMBLER  F39X_TARGETBL_STARTUP                                                03/15/2013 15:22:26 PAGE     6

XREF SYMBOL TABLE LISTING
---- ------ ----- -------


N A M E               T Y P E  V A L U E   ATTRIBUTES / REFERENCES

?C_C51STARTUP. . . .  C SEG    0005H       REL=UNIT   216# 228
?C_START . . . . . .  C ADDR   -----       EXT   222# 296
?C_STARTUP . . . . .  C ADDR   0000H   A      213 223 226#
?STACK . . . . . . .  I SEG    0001H       REL=UNIT   217# 219 285
ACC. . . . . . . . .  D ADDR   00E0H   A      133#
B. . . . . . . . . .  D ADDR   00F0H   A      134#
DPH. . . . . . . . .  D ADDR   0083H   A      137#
DPL. . . . . . . . .  D ADDR   0082H   A      136#
HW_INTVEC_SEPARATION  N NUMB   0008H   A      150# 162 165 168 171 174 177 180 183 189 192 195 198 204
HW_INTVEC_TABLE. . .  N NUMB   0003H   A      149# 162 165 168 171 174 177 180 183 189 192 195 198 204
IBPSTACK . . . . . .  N NUMB   0000H   A      85# 267
IBPSTACKTOP. . . . .  N NUMB   0100H   A      88#
IDATALEN . . . . . .  N NUMB   0000H   A      56# 232
INTVEC_SEPARATION. .  N NUMB   0003H   A      160# 163 166 169 172 175 178 181 184 190 193 196 199 205
INTVEC_TABLE . . . .  N NUMB   0203H   A      159# 163 166 169 172 175 178 181 184 190 193 196 199 205
PBPSTACK . . . . . .  N NUMB   0000H   A      103# 280
PBPSTACKTOP. . . . .  N NUMB   0100H   A      107#
PDATALEN . . . . . .  N NUMB   0000H   A      72# 258
PDATASTART . . . . .  N NUMB   0000H   A      68#
PPAGE. . . . . . . .  N NUMB   0000H   A      123#
PPAGEENABLE. . . . .  N NUMB   0000H   A      119# 254
PPAGE_SFR. . . . . .  D ADDR   00A0H   A      127#
SP . . . . . . . . .  D ADDR   0081H   A      135# 285
STARTUP1 . . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP   226 230#
START_APPLICATION. .  N NUMB   0200H   A      156 157# 159
XBPSTACK . . . . . .  N NUMB   0000H   A      94# 273
XBPSTACKTOP. . . . .  N NUMB   0000H   A      97#
XDATALEN . . . . . .  N NUMB   0000H   A      64# 239 242
XDATASTART . . . . .  N NUMB   0000H   A      60#


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)

C51 COMPILER V9.02   F39X_UART0_INTERRUPT                                                  03/18/2013 14:09:51 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE F39X_UART0_INTERRUPT
OBJECT MODULE PLACED IN F39x_UART0_Interrupt.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe F39x_UART0_Interrupt.c DB OE BR INCDIR(C:\SiLabs\MCU\INC)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F39x_UART0_Interrupt.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2012 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This program demonstrates how to configure the C8051F390 to write to and read
  10          // from the UART interface. The program reads a word using the UART interrupts
  11          // and outputs that word to the screen, with all characters in uppercase
  12          //
  13          // How To Test:
  14          //
  15          // 1) Ensure that jumpers are placed on J14 and J15 of the C8051F390 UDP MCU
  16          //    board that connect P0.4 to the VCP_RX, and P0.5 to the VCP_TX.
  17          // 2) Connect USB cable from the development board to a PC
  18          // 3) Specify the target baudrate in the constant <BAUDRATE>.
  19          // 4) Open Hyperterminal, or a similar program, and connect to the target
  20          //    board's USB port (virtual com port).
  21          // 5) Download and execute code to an 'F390 target board.
  22          //
  23          //
  24          // Target:         C8051F390
  25          // Tool chain:     Generic
  26          // Command Line:   None
  27          //
  28          // Release 1.0
  29          //    - Initial Revision (ST)
  30          //    - 16 JAN 2012
  31          //
  32          
  33          //-----------------------------------------------------------------------------
  34          // Includes
  35          //-----------------------------------------------------------------------------
  36          
  37          #include <compiler_defs.h>
  38          #include <C8051F336_defs.h>            // SFR declarations
  39          #include <stdio.h>
  40          
  41          //-----------------------------------------------------------------------------
  42          // Global CONSTANTS
  43          //-----------------------------------------------------------------------------
  44          
  45          #define SYSTEMCLOCK    49000000/2      // SYSCLK frequency in Hz
  46          #define BAUDRATE           115200      // Baud rate of UART in bps
  47          
  48          //-----------------------------------------------------------------------------
  49          // Function PROTOTYPES
  50          //-----------------------------------------------------------------------------
  51          
  52          void SYSCLK_Init (void);
  53          void UART0_Init (void);
  54          void PORT_Init (void);
  55          void Timer2_Init (int);
C51 COMPILER V9.02   F39X_UART0_INTERRUPT                                                  03/18/2013 14:09:51 PAGE 2   

  56          INTERRUPT_PROTO (UART0_ISR, INTERRUPT_UART0);
  57          
  58          //-----------------------------------------------------------------------------
  59          // Global Variables
  60          //-----------------------------------------------------------------------------
  61          
  62          #define UART_BUFFERSIZE 64
  63          U8 UART_Buffer[UART_BUFFERSIZE];
  64          U8 UART_Buffer_Size = 0;
  65          U8 UART_Input_First = 0;
  66          U8 UART_Output_First = 0;
  67          U8 TX_Ready =1;
  68          static U8 Byte;
  69          
  70          //-----------------------------------------------------------------------------
  71          // MAIN Routine
  72          //-----------------------------------------------------------------------------
  73          
  74          void main (void)
  75          {
  76   1         PCA0MD &= ~0x40;                    // WDTE = 0 (clear watchdog timer
  77   1                                             // enable)
  78   1         PORT_Init();                        // Initialize Port I/O
  79   1         SYSCLK_Init ();                     // Initialize Oscillator
  80   1         UART0_Init();
  81   1      
  82   1         EA = 1;
  83   1      
  84   1         while(1)
  85   1         {
  86   2            // If the complete word has been entered via the terminal followed by
  87   2            // carriage return
  88   2      
  89   2            if(TX_Ready == 1 && UART_Buffer_Size != 0 && Byte == 13)
  90   2            {
  91   3               TX_Ready = 0;                 // Set the flag to zero
  92   3               TI0 = 1;                      // Set transmit flag to 1
  93   3            }
  94   2         }
  95   1      }
  96          
  97          //-----------------------------------------------------------------------------
  98          // Initialization Subroutines
  99          //-----------------------------------------------------------------------------
 100          
 101          //-----------------------------------------------------------------------------
 102          // PORT_Init
 103          //-----------------------------------------------------------------------------
 104          //
 105          // Return Value : None
 106          // Parameters   : None
 107          //
 108          // Configure the Crossbar and GPIO ports.
 109          //
 110          // P0.4   digital   push-pull    UART TX
 111          // P0.5   digital   open-drain   UART RX
 112          //
 113          //-----------------------------------------------------------------------------
 114          void PORT_Init (void)
 115          {
 116   1         P0MDOUT |= 0x10;                    // Enable UTX as push-pull output
 117   1         XBR0    = 0x01;                     // Enable UART on P0.4(TX) and P0.5(RX)
C51 COMPILER V9.02   F39X_UART0_INTERRUPT                                                  03/18/2013 14:09:51 PAGE 3   

 118   1         XBR1    = 0x40;                     // Enable crossbar and weak pull-ups
 119   1      }
 120          
 121          //-----------------------------------------------------------------------------
 122          // SYSCLK_Init
 123          //-----------------------------------------------------------------------------
 124          //
 125          // Return Value : None
 126          // Parameters   : None
 127          //
 128          // This routine initializes the system clock to use the internal 49 MHz
 129          // oscillator divided by 2 as its clock source.  Also enables missing clock 
 130          // detector reset.
 131          //
 132          //-----------------------------------------------------------------------------
 133          
 134          void SYSCLK_Init (void)
 135          {
 136   1         OSCICN = 0x83;                     // Set system clock to 24.5 MHz
 137   1         RSTSRC = 0x04;                     // Enable missing clock detector
 138   1      }
 139          
 140          //-----------------------------------------------------------------------------
 141          // UART0_Init
 142          //-----------------------------------------------------------------------------
 143          //
 144          // Return Value : None
 145          // Parameters   : None
 146          //
 147          // Configure the UART0 using Timer1, for <BAUDRATE> and 8-N-1.
 148          //
 149          //-----------------------------------------------------------------------------
 150          void UART0_Init (void)
 151          {
 152   1         SCON0 = 0x10;                       // SCON0: 8-bit variable bit rate
 153   1                                             //        level of STOP bit is ignored
 154   1                                             //        RX enabled
 155   1                                             //        ninth bits are zeros
 156   1                                             //        clear RI0 and TI0 bits
 157   1         if (SYSTEMCLOCK/BAUDRATE/2/256 < 1) {
 158   2            TH1 = -(SYSTEMCLOCK/BAUDRATE/2);
 159   2            CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
 160   2            CKCON |=  0x08;
 161   2         } else if (SYSTEMCLOCK/BAUDRATE/2/256 < 4) {
 162   2            TH1 = -(SYSTEMCLOCK/BAUDRATE/2/4);
 163   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01
 164   2            CKCON |=  0x01;
 165   2         } else if (SYSTEMCLOCK/BAUDRATE/2/256 < 12) {
 166   2            TH1 = -(SYSTEMCLOCK/BAUDRATE/2/12);
 167   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
 168   2         } else {
 169   2            TH1 = -(SYSTEMCLOCK/BAUDRATE/2/48);
 170   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
 171   2            CKCON |=  0x02;
 172   2         }
 173   1      
 174   1         TL1 = TH1;                          // init Timer1
 175   1         TMOD &= ~0xf0;                      // TMOD: timer 1 in 8-bit autoreload
 176   1         TMOD |=  0x20;
 177   1         TR1 = 1;                            // START Timer1
 178   1         TX_Ready = 1;                       // Flag showing that UART can transmit
 179   1         IP |= 0x10;                         // Make UART high priority
C51 COMPILER V9.02   F39X_UART0_INTERRUPT                                                  03/18/2013 14:09:51 PAGE 4   

 180   1         ES0 = 1;                            // Enable UART0 interrupts
 181   1      }
 182          
 183          //-----------------------------------------------------------------------------
 184          // Interrupt Service Routines
 185          //-----------------------------------------------------------------------------
 186          
 187          //-----------------------------------------------------------------------------
 188          // UART0_Interrupt
 189          //-----------------------------------------------------------------------------
 190          //
 191          // This routine is invoked whenever a character is entered or displayed on the
 192          // Hyperterminal.
 193          //
 194          //-----------------------------------------------------------------------------
 195          
 196          INTERRUPT(UART0_ISR, INTERRUPT_UART0)
 197          {
 198   1         if (RI0 == 1)
 199   1         {
 200   2            if( UART_Buffer_Size == 0)  {    // If new word is entered
 201   3               UART_Input_First = 0;    }
 202   2      
 203   2            RI0 = 0;                         // Clear interrupt flag
 204   2      
 205   2            Byte = SBUF0;                    // Read a character from UART
 206   2      
 207   2            if (UART_Buffer_Size < UART_BUFFERSIZE)
 208   2            {
 209   3               UART_Buffer[UART_Input_First] = Byte; // Store in array
 210   3      
 211   3               UART_Buffer_Size++;           // Update array's size
 212   3      
 213   3               UART_Input_First++;           // Update counter
 214   3            }
 215   2         }
 216   1      
 217   1         if (TI0 == 1)                       // Check if transmit flag is set
 218   1         {
 219   2            TI0 = 0;                         // Clear interrupt flag
 220   2      
 221   2            if (UART_Buffer_Size != 1)       // If buffer not empty
 222   2            {
 223   3               // If a new word is being output
 224   3               if ( UART_Buffer_Size == UART_Input_First ) {
 225   4                    UART_Output_First = 0;  }
 226   3      
 227   3               // Store a character in the variable byte
 228   3               Byte = UART_Buffer[UART_Output_First];
 229   3      
 230   3               if ((Byte >= 0x61) && (Byte <= 0x7A)) { // If upper case letter
 231   4                  Byte -= 32; }
 232   3      
 233   3               SBUF0 = Byte;                 // Transmit to Hyperterminal
 234   3      
 235   3               UART_Output_First++;          // Update counter
 236   3      
 237   3               UART_Buffer_Size--;           // Decrease array size
 238   3      
 239   3            }
 240   2            else
 241   2            {
C51 COMPILER V9.02   F39X_UART0_INTERRUPT                                                  03/18/2013 14:09:51 PAGE 5   

 242   3               UART_Buffer_Size = 0;         // Set the array size to 0
 243   3               TX_Ready = 1;                 // Indicate transmission complete
 244   3            }
 245   2         }
 246   1      }
 247          
 248          //-----------------------------------------------------------------------------
 249          // End Of File
 250          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     69    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

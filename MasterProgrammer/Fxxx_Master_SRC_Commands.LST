C51 COMPILER V9.02   FXXX_MASTER_SRC_COMMANDS                                              03/19/2013 14:27:31 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE FXXX_MASTER_SRC_COMMANDS
OBJECT MODULE PLACED IN Fxxx_Master_SRC_Commands.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe Fxxx_Master_SRC_Commands.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // Fxxx_TargetBL_Commands.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) 2010 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // 
  10          //
  11          // How To Test:
  12          //
  13          // 
  14          //
  15          //
  16          // Target:         C8051Fxxx (Any Silicon Labs Flash MCU)
  17          // Tool chain:     Generic
  18          // Command Line:   None
  19          //
  20          //
  21          // Release 1.0 / 01SEP2010 (PKC)
  22          //    -Initial Revision
  23          //
  24          //-----------------------------------------------------------------------------
  25          
  26          //-----------------------------------------------------------------------------
  27          // Includes
  28          //-----------------------------------------------------------------------------
  29          #include <compiler_defs.h>
  30          #include "Fxxx_SFR_Defs_Wrapper.h"     // This header file will include the
  31                                                 // real MCU register definition file
  32          
  33          #include "Fxxx_Master_Config.h"
  34          #include "Fxxx_Master_Interface.h"
  35          #include "Fxxx_Target_Interface.h"
  36          #include "Fxxx_DataSource_Interface.h"
  37          #include "Fxxx_Master_Validation.h"
  38          
  39          //-----------------------------------------------------------------------------
  40          // Global CONSTANTS
  41          //-----------------------------------------------------------------------------
  42          
  43          
  44          
  45          //-----------------------------------------------------------------------------
  46          // Global Variables
  47          //-----------------------------------------------------------------------------
  48          SEGMENT_VARIABLE (SRC_Info[TGT_ENUM_END_VALUE], U8, SEG_XDATA);
  49          SEGMENT_VARIABLE (SRC_Serial[NUM_SERIAL_BYTES], U8, SEG_XDATA);
  50          
  51          SEGMENT_VARIABLE (SRC_Rx_Buf[SRC_COMM_RX_BUF_LENGTH], U8, SEG_XDATA);
  52          SEGMENT_VARIABLE (SRC_Tx_Buf[SRC_COMM_TX_BUF_LENGTH], U8, SEG_XDATA);
  53          
  54          U8 SRC_App_InfoBlock_Len;
  55          U16 SRC_Page_Size;
C51 COMPILER V9.02   FXXX_MASTER_SRC_COMMANDS                                              03/19/2013 14:27:31 PAGE 2   

  56          U8 SRC_CRC_Is32bit = 0; // 0=16-bit; 1=32-bit
  57          
  58          //-----------------------------------------------------------------------------
  59          // Function Prototypes (Local)
  60          //-----------------------------------------------------------------------------
  61          
  62          
  63          //=============================================================================
  64          // Function Definitions
  65          //=============================================================================
  66          
  67          //-----------------------------------------------------------------------------
  68          // SRC_Get_Info
  69          //-----------------------------------------------------------------------------
  70          //
  71          // Return Value:  None
  72          // Parameters:    None
  73          //
  74          //
  75          //
  76          //-----------------------------------------------------------------------------
  77          U8 SRC_Get_Info (U8 *src_info)
  78          {
  79   1         // Command Format:
  80   1         // [0] Command
  81   1      
  82   1         // Response:
  83   1         // [0] Response code (ACK/ERROR etc)
  84   1         // [1] App InfoBlock byte0 (length)
  85   1         // *** SRC waits for RSP_OK from Master before sending rest of the bytes ***
  86   1         // [2] App InfoBlock byte1
  87   1         // [...] ...
  88   1         // [M] App InfoBlock byte(M-1)
  89   1         // [M+1] App FW Start Addr0 (LSB)
  90   1         // [M+2] App FW Start Addr1
  91   1         // [M+3] App FW Start Addr2
  92   1         // [M+4] App FW End Addr0 (LSB)
  93   1         // [M+5] App FW End Addr1
  94   1         // [M+6] App FW End Addr2
  95   1      
  96   1         U8 index = 0;
  97   1         U8 retval = 0;
  98   1         
  99   1         SRC_Tx_Buf[0] = SRC_CMD_GET_INFO;
 100   1         SRC_Comm_Send_Tx_Bytes (1);   
 101   1      
 102   1         retval = SRC_Comm_Wait_For_Rx_Bytes (2);
 103   1      
 104   1         if (retval == TGT_RSP_OK)
 105   1         {
 106   2            SRC_App_InfoBlock_Len = SRC_Rx_Buf[1];
 107   2      
 108   2            SRC_Tx_Buf[0] = SRC_RSP_OK;
 109   2            SRC_Comm_Send_Tx_Bytes (1);   
 110   2          
 111   2            SRC_Comm_Wait_For_Rx_Bytes (SRC_App_InfoBlock_Len-1+6); // Get remaining bytes
 112   2      
 113   2            src_info[0] = SRC_App_InfoBlock_Len;
 114   2      
 115   2            for (index = 0; index < (SRC_App_InfoBlock_Len-1+6); index++)
 116   2            {
 117   3               src_info[index+1] = SRC_Rx_Buf[index];
C51 COMPILER V9.02   FXXX_MASTER_SRC_COMMANDS                                              03/19/2013 14:27:31 PAGE 3   

 118   3            }
 119   2      
 120   2            SRC_Page_Size = (1 << src_info[SRC_APP_FLASH_PAGE_SIZE_CODE]); // if code=n, size=2^n
 121   2      
 122   2            if ((src_info[SRC_APP_CRC_TYPE] & 0x80) == 0)
 123   2            {
 124   3               SRC_CRC_Is32bit = 0;
 125   3            }
 126   2            else
 127   2            {
 128   3               SRC_CRC_Is32bit = 1;
 129   3            }
 130   2      
 131   2            for (index = 0; index < NUM_SERIAL_BYTES; index++)
 132   2            {
 133   3               SRC_Serial[index] = src_info[SRC_APP_DEVICE_SERIAL0 + index];
 134   3            }
 135   2         }
 136   1      
 137   1         return (retval);
 138   1      }
 139          
 140          //-----------------------------------------------------------------------------
 141          // SRC_Get_NextPage_Info
 142          //-----------------------------------------------------------------------------
 143          //
 144          // Return Value:  None
 145          // Parameters:    None
 146          //
 147          //
 148          //
 149          //-----------------------------------------------------------------------------
 150          U8 SRC_Get_NextPage_Info (U32 *addr, U32 *src_page_crc)
 151          {
 152   1         // Command Format:
 153   1         // [0] Command
 154   1      
 155   1         // Response:
 156   1         // [0] Response code (ACK/ERROR etc)
 157   1         // [1] Page Addr0 (LSB) -or- Num app FW pages specified
 158   1         // [2] Page Addr1
 159   1         // [3] Page Addr2
 160   1         // [4] Page CRC0 (LSB)
 161   1         // [5] Page CRC1
 162   1         // [6] [Page CRC2]
 163   1         // [7] [Page CRC3]
 164   1      
 165   1         U8 retval = 0;
 166   1         UU32 tempval;
 167   1         
 168   1         SRC_Tx_Buf[0] = SRC_CMD_GET_NEXTPAGE_INFO;
 169   1         SRC_Comm_Send_Tx_Bytes (1);   
 170   1      
 171   1         if (SRC_CRC_Is32bit == 0)
 172   1         {
 173   2            // 16-bit CRC
 174   2            retval = SRC_Comm_Wait_For_Rx_Bytes (6);
 175   2         }
 176   1         else
 177   1         {
 178   2            // 32-bit CRC
 179   2            retval = SRC_Comm_Wait_For_Rx_Bytes (8);
C51 COMPILER V9.02   FXXX_MASTER_SRC_COMMANDS                                              03/19/2013 14:27:31 PAGE 4   

 180   2         }
 181   1      
 182   1         tempval.U32 = 0;
 183   1      
 184   1         // SRC_Rx_Buf[1] will contain 'Page addr0' if retval==RSP_OK
 185   1         // SRC_Rx_Buf[1] will contain 'Num app FW pages specified' if retval==SRC_RSP_DATA_END
 186   1      
 187   1         tempval.U8[b0] = SRC_Rx_Buf[1];
 188   1         tempval.U8[b1] = SRC_Rx_Buf[2];
 189   1         tempval.U8[b2] = SRC_Rx_Buf[3];
 190   1      
 191   1         *addr = tempval.U32;
 192   1      
 193   1         tempval.U32 = 0;
 194   1      
 195   1         tempval.U8[b0] = SRC_Rx_Buf[4];
 196   1         tempval.U8[b1] = SRC_Rx_Buf[5];
 197   1      
 198   1         if (SRC_CRC_Is32bit != 0)
 199   1         {
 200   2            tempval.U8[b2] = SRC_Rx_Buf[6];
 201   2            tempval.U8[b3] = SRC_Rx_Buf[7];
 202   2         }
 203   1      
 204   1         *src_page_crc = tempval.U32;
 205   1      
 206   1         return (retval);
 207   1      }
 208          
 209          //-----------------------------------------------------------------------------
 210          // SRC_Get_NextPage
 211          //-----------------------------------------------------------------------------
 212          //
 213          // Return Value:  None
 214          // Parameters:    None
 215          //
 216          //
 217          //
 218          //-----------------------------------------------------------------------------
 219          U8 SRC_Get_NextPage (void)
 220          {
 221   1         // Command Format:
 222   1         // [0] Command
 223   1      
 224   1         // Response:
 225   1         // [0] Response code (ACK/ERROR etc)
 226   1         // [1] Page byte0
 227   1         // [...] ...
 228   1         // [T] Page byte(T-1)
 229   1         // [T+1] Response code (ACK/ERROR etc)
 230   1      
 231   1         U8 retval = 0;
 232   1         
 233   1         SRC_Tx_Buf[0] = SRC_CMD_GET_NEXTPAGE;
 234   1         SRC_Comm_Send_Tx_Bytes (1);   
 235   1      
 236   1         retval = SRC_Comm_Wait_For_Rx_Bytes (SRC_Page_Size+2);
 237   1         // Page data is stored in SRC_Rx_Buf by the SRC_Comm_Wait_For_Rx_Bytes function
 238   1      
 239   1         return (retval);
 240   1      }
 241          
C51 COMPILER V9.02   FXXX_MASTER_SRC_COMMANDS                                              03/19/2013 14:27:31 PAGE 5   

 242          //-----------------------------------------------------------------------------
 243          // SRC_Disp_TGT_Info
 244          //-----------------------------------------------------------------------------
 245          //
 246          // Return Value:  None
 247          // Parameters:    None
 248          //
 249          //
 250          //
 251          //-----------------------------------------------------------------------------
 252          U8 SRC_Disp_TGT_Info (U8 buf_length, U8 *buf)
 253          {
 254   1         // Command Format:
 255   1         // [0] Command
 256   1         // [1] BL InfoBlock byte0 (length)
 257   1         // [2] BL InfoBlock byte1
 258   1         // [.] ...
 259   1         // [N] BL InfoBlock byte(N-1)
 260   1         // [N+1] App InfoBlock byte0 (length)
 261   1         // [N+2] App InfoBlock byte1
 262   1         // [...] ...
 263   1         // [N+M] App InfoBlock byte(M-1)
 264   1      
 265   1         // Response:
 266   1         // [0] Response code (ACK/ERROR etc)
 267   1      
 268   1         U8 index = 0;
 269   1         U8 retval = 0;
 270   1      
 271   1         SRC_Tx_Buf[0] = SRC_CMD_DISP_TGT_INFO;
 272   1      
 273   1         for (index = 0; index < buf_length; index++)
 274   1         {
 275   2            SRC_Tx_Buf[index+1] = *(buf+index);
 276   2         }
 277   1      
 278   1         SRC_Comm_Send_Tx_Bytes (buf_length+1);   
 279   1      
 280   1         retval = SRC_Comm_Wait_For_Rx_Bytes (1);
 281   1      
 282   1         return (retval);
 283   1      }
 284          
 285          //-----------------------------------------------------------------------------
 286          // SRC_Disp_Error
 287          //-----------------------------------------------------------------------------
 288          //
 289          // Return Value:  None
 290          // Parameters:    None
 291          //
 292          //
 293          //
 294          //-----------------------------------------------------------------------------
 295          U8 SRC_Disp_Error (U8 error_code)
 296          {
 297   1         // Command Format:
 298   1         // [0] Command
 299   1      
 300   1         U8 index = 0;
 301   1         U8 retval = 0;
 302   1      
 303   1         SRC_Tx_Buf[0] = SRC_CMD_DISP_ERROR | (error_code & 0x7F);
C51 COMPILER V9.02   FXXX_MASTER_SRC_COMMANDS                                              03/19/2013 14:27:31 PAGE 6   

 304   1      
 305   1         SRC_Comm_Send_Tx_Bytes (1);   
 306   1      
 307   1         retval = SRC_Comm_Wait_For_Rx_Bytes (1);
 308   1      
 309   1         return (retval);
 310   1      }
 311          
 312          //-----------------------------------------------------------------------------
 313          // End Of File
 314          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    484    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   1182    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
